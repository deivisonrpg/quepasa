{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "QuePasa is a Go-based WhatsApp bot platform that exposes HTTP APIs for WhatsApp messaging integration",
        "title": "QuePasa WhatsApp API",
        "termsOfService": "https://github.com/nocodeleaks/quepasa",
        "contact": {
            "name": "QuePasa Support",
            "url": "https://github.com/nocodeleaks/quepasa"
        },
        "license": {
            "name": "GNU Affero General Public License v3.0",
            "url": "https://github.com/nocodeleaks/quepasa/blob/main/LICENSE.md"
        },
        "version": "4.0.0"
    },
    "basePath": "/",
    "paths": {
        "/account": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create, update, or manage user accounts (master access required)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Application"
                ],
                "summary": "Manage user accounts",
                "parameters": [
                    {
                        "description": "Account request",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "password": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/chat/archive": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Archives or unarchives a WhatsApp chat. Archiving also unpins the chat automatically.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Archive or unarchive chat",
                "parameters": [
                    {
                        "description": "Chat archive request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ChatArchiveRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/chat/markread": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Marks a WhatsApp chat as read (removes unread badge)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Mark chat as read",
                "parameters": [
                    {
                        "description": "Chat read request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ChatReadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/chat/markunread": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Marks a WhatsApp chat as unread (shows unread badge)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Mark chat as unread",
                "parameters": [
                    {
                        "description": "Chat unread request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ChatReadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/chat/presence": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Controls typing indicators and chat presence in WhatsApp conversations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Control chat presence",
                "parameters": [
                    {
                        "description": "Chat presence request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ChatPresenceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/command": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Execute control commands for the bot server (start, stop, restart, status)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bot"
                ],
                "summary": "Execute bot commands",
                "parameters": [
                    {
                        "enum": [
                            "start",
                            "stop",
                            "restart",
                            "status"
                        ],
                        "type": "string",
                        "description": "Command action",
                        "name": "action",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/contacts": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a list of all WhatsApp contacts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contacts"
                ],
                "summary": "Get contacts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpContactsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/download": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Downloads media files (images, videos, documents) from WhatsApp messages",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Download"
                ],
                "summary": "Download media",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Message ID (query parameter alternate)",
                        "name": "messageid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Use cached content",
                        "name": "cache",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Media file",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/edit": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Edits the content of an existing message by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "Edit message",
                "parameters": [
                    {
                        "description": "Message edit request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "content": {
                                    "type": "string"
                                },
                                "messageId": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/groups/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new WhatsApp group with specified title and participants",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Create a new group",
                "parameters": [
                    {
                        "description": "Group creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "participants": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "title": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpSingleGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/groups/description": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the topic/description of a specific WhatsApp group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Set group topic",
                "parameters": [
                    {
                        "description": "Group topic update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "group_jid": {
                                    "type": "string"
                                },
                                "topic": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpSingleGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/groups/get": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves detailed information about a specific WhatsApp group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Get group information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpSingleGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/groups/getall": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a list of all WhatsApp groups that the bot is currently a member of",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Get all groups",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpGroupsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/groups/leave": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Leave a specific WhatsApp group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Leave group",
                "parameters": [
                    {
                        "description": "Leave group request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "chatId": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/groups/name": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the name of a specific WhatsApp group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Set group name",
                "parameters": [
                    {
                        "description": "Group name update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "group_jid": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpSingleGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/groups/participants": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add, remove, promote, or demote participants in a WhatsApp group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Update group participants",
                "parameters": [
                    {
                        "description": "Participants update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "action": {
                                    "type": "string"
                                },
                                "group_jid": {
                                    "type": "string"
                                },
                                "participants": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpParticipantResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/groups/photo": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates or removes the photo of a specific WhatsApp group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Set/Remove group photo",
                "parameters": [
                    {
                        "description": "Group photo update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "group_jid": {
                                    "type": "string"
                                },
                                "remove_img": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpSingleGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/groups/requests": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get, approve, or reject join requests for WhatsApp groups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Handle group join requests",
                "parameters": [
                    {
                        "description": "Membership request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "action": {
                                    "type": "string"
                                },
                                "group_jid": {
                                    "type": "string"
                                },
                                "participants": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "type": "string",
                        "description": "Group JID (for GET requests)",
                        "name": "group_jid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpRequestResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get, approve, or reject join requests for WhatsApp groups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Handle group join requests",
                "parameters": [
                    {
                        "description": "Membership request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "action": {
                                    "type": "string"
                                },
                                "group_jid": {
                                    "type": "string"
                                },
                                "participants": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "type": "string",
                        "description": "Group JID (for GET requests)",
                        "name": "group_jid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpRequestResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Basic health check endpoint to verify if the application is running",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.HealthResponse"
                        }
                    }
                }
            }
        },
        "/healthapi": {
            "get": {
                "description": "Provides detailed health information for WhatsApp servers with authentication support",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Detailed health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.HealthResponse"
                        }
                    }
                }
            }
        },
        "/info": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get bot/server information and settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Information"
                ],
                "summary": "Get bot information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete bot/server information and settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Information"
                ],
                "summary": "Delete bot information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update bot/server information and settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Information"
                ],
                "summary": "Update bot information",
                "parameters": [
                    {
                        "description": "Settings update",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "settings": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/invite": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Generates an invite link for a specific WhatsApp group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Generate group invite link",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat ID (query parameter)",
                        "name": "chatid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpInviteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/invite/{chatid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Generates an invite link for a specific WhatsApp group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Generate group invite link",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat ID (path parameter)",
                        "name": "chatid",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Chat ID (query parameter)",
                        "name": "chatid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpInviteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/isonwhatsapp": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Checks if provided phone numbers are registered on WhatsApp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contacts"
                ],
                "summary": "Check WhatsApp registration",
                "parameters": [
                    {
                        "description": "Phone numbers to check",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "phones": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpIsOnWhatsappResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/message/{messageid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a specific message by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "Get message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Message ID",
                        "name": "messageid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Revokes or deletes a specific message by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "Revoke message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Message ID",
                        "name": "messageid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/paircode": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Generates a pairing code for WhatsApp authentication using phone number",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connection"
                ],
                "summary": "Generate pairing code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Phone number for pairing",
                        "name": "phone",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/rabbitmq": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create, get, or delete RabbitMQ configurations for message queueing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RabbitMQ"
                ],
                "summary": "Manage RabbitMQ configurations",
                "parameters": [
                    {
                        "description": "RabbitMQ config (for POST)",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "connection_string": {
                                    "type": "string"
                                },
                                "exchange": {
                                    "type": "string"
                                },
                                "routing_key": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "type": "string",
                        "description": "Connection string (for DELETE)",
                        "name": "connection_string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpRabbitMQResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create, get, or delete RabbitMQ configurations for message queueing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RabbitMQ"
                ],
                "summary": "Manage RabbitMQ configurations",
                "parameters": [
                    {
                        "description": "RabbitMQ config (for POST)",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "connection_string": {
                                    "type": "string"
                                },
                                "exchange": {
                                    "type": "string"
                                },
                                "routing_key": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "type": "string",
                        "description": "Connection string (for DELETE)",
                        "name": "connection_string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpRabbitMQResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create, get, or delete RabbitMQ configurations for message queueing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RabbitMQ"
                ],
                "summary": "Manage RabbitMQ configurations",
                "parameters": [
                    {
                        "description": "RabbitMQ config (for POST)",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "connection_string": {
                                    "type": "string"
                                },
                                "exchange": {
                                    "type": "string"
                                },
                                "routing_key": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "type": "string",
                        "description": "Connection string (for DELETE)",
                        "name": "connection_string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpRabbitMQResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/read": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Marks one or more messages as read by id. Accepts a JSON array in the request body (e.g. [\"id1\",\"id2\"] or [{\"id\":\"id1\"},{\"id\":\"id2\"}])",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "Mark messages as read",
                "parameters": [
                    {
                        "description": "Array of message ids or objects with id field",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/receive": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves pending messages from WhatsApp with optional timestamp filtering and exceptions error filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "Receive messages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Timestamp filter for messages",
                        "name": "timestamp",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by exceptions error status: 'true' for messages with exceptions errors, 'false' for messages without exceptions errors, omit for all messages",
                        "name": "exceptions",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpReceiveResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/scan": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Generates a QR code for WhatsApp Web authentication scanning",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connection"
                ],
                "summary": "Generate QR code",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/send": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Endpoint to send messages via WhatsApp. Accepts sending of:\n- Plain text (field \"text\")\n- Files by URL (field \"url\") — server will download and send as attachment\n- Base64 content (field \"content\") — use format data:\u003cmime\u003e;base64,\u003cdata\u003e\n- Polls (field \"poll\") — send the poll JSON in the \"poll\" field\n- Location (field \"location\") — send location with latitude/longitude in the \"location\" object\n- Contact (field \"contact\") — send contact with phone/name in the \"contact\" object\n\nMain fields:\n- chatId: chat identifier (can be WID, LID or number with suffix @s.whatsapp.net)\n- text: message text\n- url: public URL to download a file\n- content: embedded base64 content (e.g.: data:image/png;base64,...)\n- fileName: file name (optional, used when name cannot be inferred)\n- poll: JSON object with the poll (question, options, selections)\n- location: JSON object with location data (latitude, longitude, name, address, url)\n- contact: JSON object with contact data (phone, name, vcard)\n\nLocation object fields:\n- latitude (float64, required): Location latitude in degrees (e.g.: -23.550520)\n- longitude (float64, required): Location longitude in degrees (e.g.: -46.633308)\n- name (string, optional): Location name/description\n- address (string, optional): Location full address\n- url (string, optional): URL with link to the map\n\nContact object fields:\n- phone (string, required): Contact phone number\n- name (string, required): Contact display name\n- vcard (string, optional): Full vCard string (auto-generated if not provided)\n\nExamples:\nText:\n```json\n{\n\"chatId\": \"5511999999999@s.whatsapp.net\",\n\"text\": \"Hello, world!\"\n}\n```\nPoll:\n```json\n{\n\"chatId\": \"5511999999999@s.whatsapp.net\",\n\"poll\": {\n\"question\": \"Which languages do you know?\",\n\"options\": [\"JavaScript\",\"Python\",\"Go\",\"Java\",\"C#\",\"Ruby\"],\n\"selections\": 3\n}\n}\n```\nLocation:\n```json\n{\n\"chatId\": \"5511999999999@s.whatsapp.net\",\n\"location\": {\n\"latitude\": -23.550520,\n\"longitude\": -46.633308,\n\"name\": \"Avenida Paulista, São Paulo\"\n}\n}\n```\nContact:\n```json\n{\n\"chatId\": \"5511999999999@s.whatsapp.net\",\n\"contact\": {\n\"phone\": \"5511999999999\",\n\"name\": \"John Doe\"\n}\n}\n```\nBase64:\n```json\n{\n\"chatId\": \"5511999999999@s.whatsapp.net\",\n\"content\": \"data:image/png;base64,....\"\n}\n```\nFile by URL:\n```json\n{\n\"chatId\": \"5511999999999@s.whatsapp.net\",\n\"url\": \"https://example.com/path/to/file.jpg\"\n}\n```",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Send"
                ],
                "summary": "Send any type of message (text, file, poll, base64 content, location, contact)",
                "parameters": [
                    {
                        "description": "Request body. Use 'content' for base64, 'url' for remote files, 'poll' for poll JSON, 'location' for location object, or 'contact' for contact object.",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "chatId": {
                                    "type": "string"
                                },
                                "contact": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "phone": {
                                            "type": "string"
                                        },
                                        "vcard": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "content": {
                                    "type": "string"
                                },
                                "fileName": {
                                    "type": "string"
                                },
                                "location": {
                                    "type": "object",
                                    "properties": {
                                        "address": {
                                            "type": "string"
                                        },
                                        "latitude": {
                                            "type": "number",
                                            "format": "float64"
                                        },
                                        "longitude": {
                                            "type": "number",
                                            "format": "float64"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "url": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "poll": {
                                    "type": "object",
                                    "properties": {
                                        "options": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "question": {
                                            "type": "string"
                                        },
                                        "selections": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "text": {
                                    "type": "string"
                                },
                                "url": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpSendResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpSendResponse"
                        }
                    }
                }
            }
        },
        "/senddocument": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Endpoint to send documents via WhatsApp, forcing document type recognition regardless of file mimetype. Useful for sending images, audio files, or other content as documents.\nAccepts the same parameters as /send but always treats attachments as documents.\n\nMain fields:\n- chatId: chat identifier (can be WID, LID or number with suffix @s.whatsapp.net)\n- text: message text (optional)\n- url: public URL to download a file\n- content: embedded base64 content (e.g.: data:image/png;base64,...)\n- fileName: file name (optional, used when name cannot be inferred)\n\nExample:\n```json\n{\n\"chatId\": \"5511999999999@s.whatsapp.net\",\n\"url\": \"https://example.com/document.pdf\",\n\"text\": \"Please check this document\"\n}\n```",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Send"
                ],
                "summary": "Send document with forced document type",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "chatId": {
                                    "type": "string"
                                },
                                "content": {
                                    "type": "string"
                                },
                                "fileName": {
                                    "type": "string"
                                },
                                "text": {
                                    "type": "string"
                                },
                                "url": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpSendResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpSendResponse"
                        }
                    }
                }
            }
        },
        "/spam": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Send messages using any available server (spam/broadcast functionality)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Application"
                ],
                "summary": "Send spam messages",
                "parameters": [
                    {
                        "description": "Spam message request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "chatId": {
                                    "type": "string"
                                },
                                "text": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpSendResponse"
                        }
                    },
                    "423": {
                        "description": "No server available",
                        "schema": {
                            "$ref": "#/definitions/models.QpSendResponse"
                        }
                    }
                }
            }
        },
        "/useridentifier": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves the Local Identifier (LID) for a given phone number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contacts"
                ],
                "summary": "Get user identifier (LID)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Phone number",
                        "name": "phone",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Local identifier",
                        "name": "lid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.LIDResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/userinfo": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves detailed information for WhatsApp users by their JIDs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contacts"
                ],
                "summary": "Get user information",
                "parameters": [
                    {
                        "description": "User info request with JIDs",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UserInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        },
        "/webhook": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create, get, or delete webhook configurations for event notifications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Webhooks"
                ],
                "summary": "Manage webhook configurations",
                "parameters": [
                    {
                        "description": "Webhook config (for POST/DELETE)",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "bearer_token": {
                                    "type": "string"
                                },
                                "failure_bearer_token": {
                                    "type": "string"
                                },
                                "failure_method": {
                                    "type": "string"
                                },
                                "failure_url": {
                                    "type": "string"
                                },
                                "method": {
                                    "type": "string"
                                },
                                "url": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpWebhookResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create, get, or delete webhook configurations for event notifications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Webhooks"
                ],
                "summary": "Manage webhook configurations",
                "parameters": [
                    {
                        "description": "Webhook config (for POST/DELETE)",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "bearer_token": {
                                    "type": "string"
                                },
                                "failure_bearer_token": {
                                    "type": "string"
                                },
                                "failure_method": {
                                    "type": "string"
                                },
                                "failure_url": {
                                    "type": "string"
                                },
                                "method": {
                                    "type": "string"
                                },
                                "url": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpWebhookResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create, get, or delete webhook configurations for event notifications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Webhooks"
                ],
                "summary": "Manage webhook configurations",
                "parameters": [
                    {
                        "description": "Webhook config (for POST/DELETE)",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "bearer_token": {
                                    "type": "string"
                                },
                                "failure_bearer_token": {
                                    "type": "string"
                                },
                                "failure_method": {
                                    "type": "string"
                                },
                                "failure_url": {
                                    "type": "string"
                                },
                                "method": {
                                    "type": "string"
                                },
                                "url": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QpWebhookResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.QpResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ChatArchiveRequest": {
            "type": "object",
            "properties": {
                "archive": {
                    "description": "Required: true to archive, false to unarchive",
                    "type": "boolean"
                },
                "chatid": {
                    "description": "Required: Chat to archive/unarchive",
                    "type": "string"
                }
            }
        },
        "api.ChatPresenceRequest": {
            "type": "object",
            "properties": {
                "chatid": {
                    "description": "Required: Chat to show typing in",
                    "type": "string"
                },
                "duration": {
                    "description": "Optional: Auto-stop after duration (ms)",
                    "type": "integer"
                },
                "type": {
                    "description": "Text or audio",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappChatPresenceType"
                        }
                    ]
                }
            }
        },
        "api.ChatReadRequest": {
            "type": "object",
            "properties": {
                "chatid": {
                    "description": "Required: Chat to mark as read/unread",
                    "type": "string"
                }
            }
        },
        "api.HealthResponse": {
            "type": "object",
            "properties": {
                "debug": {
                    "description": "Extra interface{} `json:\"extra,omitempty\"`",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.QpHealthResponseItem"
                    }
                },
                "stats": {
                    "$ref": "#/definitions/api.HealthStats"
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "timestamp": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "api.HealthStats": {
            "type": "object",
            "properties": {
                "healthy": {
                    "type": "integer"
                },
                "percentage": {
                    "type": "number"
                },
                "total": {
                    "type": "integer"
                },
                "unhealthy": {
                    "type": "integer"
                }
            }
        },
        "api.LIDResponse": {
            "type": "object",
            "properties": {
                "debug": {
                    "description": "Extra interface{} `json:\"extra,omitempty\"`",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lid": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.UserInfoRequest": {
            "type": "object",
            "properties": {
                "jids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.UserInfoResponse": {
            "type": "object",
            "properties": {
                "debug": {
                    "description": "Extra interface{} `json:\"extra,omitempty\"`",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "total": {
                    "type": "integer"
                },
                "userinfos": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "models.QpContactsResponse": {
            "type": "object",
            "properties": {
                "contacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/whatsapp.WhatsappChat"
                    }
                },
                "debug": {
                    "description": "Extra interface{} `json:\"extra,omitempty\"`",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.QpDispatching": {
            "type": "object",
            "properties": {
                "broadcasts": {
                    "description": "should handle broadcast messages",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappBoolean"
                        }
                    ]
                },
                "calls": {
                    "description": "should handle calls",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappBoolean"
                        }
                    ]
                },
                "connection_string": {
                    "description": "destination URL (webhook) or connection string (rabbitmq)",
                    "type": "string"
                },
                "extra": {
                    "description": "extra info to append on payload"
                },
                "failure": {
                    "description": "first failure timestamp",
                    "type": "string"
                },
                "forwardinternal": {
                    "description": "forward internal msg from api",
                    "type": "boolean"
                },
                "groups": {
                    "description": "should handle groups messages",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappBoolean"
                        }
                    ]
                },
                "readreceipts": {
                    "description": "should emit read receipts",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappBoolean"
                        }
                    ]
                },
                "success": {
                    "description": "last success timestamp",
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "trackid": {
                    "description": "identifier of remote system to avoid loop",
                    "type": "string"
                },
                "type": {
                    "description": "webhook or rabbitmq",
                    "type": "string"
                }
            }
        },
        "models.QpGroupsResponse": {
            "type": "object",
            "properties": {
                "debug": {
                    "description": "Extra interface{} `json:\"extra,omitempty\"`",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {}
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.QpHealthResponseItem": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/definitions/whatsapp.WhatsappConnectionState"
                },
                "token": {
                    "description": "Public token",
                    "type": "string"
                },
                "wid": {
                    "description": "Whatsapp session id",
                    "type": "string"
                }
            }
        },
        "models.QpInfoResponse": {
            "type": "object",
            "properties": {
                "debug": {
                    "description": "Extra interface{} `json:\"extra,omitempty\"`",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "server": {
                    "$ref": "#/definitions/models.QpWhatsappServer"
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.QpInviteResponse": {
            "type": "object",
            "properties": {
                "debug": {
                    "description": "Extra interface{} `json:\"extra,omitempty\"`",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "url": {
                    "description": "invite public link",
                    "type": "string"
                }
            }
        },
        "models.QpIsOnWhatsappResponse": {
            "type": "object",
            "properties": {
                "debug": {
                    "description": "Extra interface{} `json:\"extra,omitempty\"`",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "registered": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.QpMessageResponse": {
            "type": "object",
            "properties": {
                "debug": {
                    "description": "Extra interface{} `json:\"extra,omitempty\"`",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "$ref": "#/definitions/whatsapp.WhatsappMessage"
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.QpParticipantResponse": {
            "type": "object",
            "properties": {
                "debug": {
                    "description": "Extra interface{} `json:\"extra,omitempty\"`",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "participants": {
                    "type": "array",
                    "items": {}
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.QpRabbitMQConfig": {
            "type": "object",
            "properties": {
                "broadcasts": {
                    "description": "should handle broadcast messages",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappBoolean"
                        }
                    ]
                },
                "calls": {
                    "description": "should handle calls",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappBoolean"
                        }
                    ]
                },
                "connection_string": {
                    "description": "RabbitMQ Connection Settings",
                    "type": "string"
                },
                "exchange_name": {
                    "description": "RabbitMQ exchange name for routing",
                    "type": "string"
                },
                "extra": {
                    "description": "extra info to append on payload"
                },
                "failure": {
                    "description": "Status Tracking",
                    "type": "string"
                },
                "forwardinternal": {
                    "description": "Configuration Options",
                    "type": "boolean"
                },
                "groups": {
                    "description": "should handle groups messages",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappBoolean"
                        }
                    ]
                },
                "queue_history": {
                    "description": "RabbitMQ history queue name (optional)",
                    "type": "string"
                },
                "readreceipts": {
                    "description": "should emit read receipts",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappBoolean"
                        }
                    ]
                },
                "routing_key": {
                    "description": "RabbitMQ routing key for exchange routing",
                    "type": "string"
                },
                "success": {
                    "description": "last success timestamp",
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "trackid": {
                    "description": "identifier of remote system to avoid loop",
                    "type": "string"
                }
            }
        },
        "models.QpRabbitMQResponse": {
            "type": "object",
            "properties": {
                "affected": {
                    "description": "items affected",
                    "type": "integer"
                },
                "debug": {
                    "description": "Extra interface{} `json:\"extra,omitempty\"`",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "rabbitmq": {
                    "description": "current rabbitmq items",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.QpRabbitMQConfig"
                    }
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.QpReceiveResponse": {
            "type": "object",
            "properties": {
                "debug": {
                    "description": "Extra interface{} `json:\"extra,omitempty\"`",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/whatsapp.WhatsappMessage"
                    }
                },
                "server": {
                    "$ref": "#/definitions/models.QpServer"
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.QpRequestResponse": {
            "type": "object",
            "properties": {
                "debug": {
                    "description": "Extra interface{} `json:\"extra,omitempty\"`",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {}
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.QpResponse": {
            "type": "object",
            "properties": {
                "debug": {
                    "description": "Extra interface{} `json:\"extra,omitempty\"`",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.QpSendResponse": {
            "type": "object",
            "properties": {
                "debug": {
                    "description": "Extra interface{} `json:\"extra,omitempty\"`",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "$ref": "#/definitions/models.QpSendResponseMessage"
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.QpSendResponseMessage": {
            "type": "object",
            "properties": {
                "chatId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "trackId": {
                    "type": "string"
                },
                "wid": {
                    "type": "string"
                }
            }
        },
        "models.QpServer": {
            "type": "object",
            "properties": {
                "broadcasts": {
                    "description": "should handle broadcast messages",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappBoolean"
                        }
                    ]
                },
                "calls": {
                    "description": "should handle calls",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappBoolean"
                        }
                    ]
                },
                "devel": {
                    "type": "boolean"
                },
                "groups": {
                    "description": "should handle groups messages",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappBoolean"
                        }
                    ]
                },
                "readreceipts": {
                    "description": "should emit read receipts",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappBoolean"
                        }
                    ]
                },
                "timestamp": {
                    "type": "string"
                },
                "token": {
                    "description": "Public token",
                    "type": "string",
                    "maxLength": 100
                },
                "user": {
                    "type": "string",
                    "maxLength": 36
                },
                "verified": {
                    "type": "boolean"
                },
                "wid": {
                    "description": "Whatsapp session id",
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "models.QpSingleGroupResponse": {
            "type": "object",
            "properties": {
                "debug": {
                    "description": "Extra interface{} `json:\"extra,omitempty\"`",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupinfo": {},
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.QpTimestamps": {
            "type": "object",
            "properties": {
                "event": {
                    "description": "Last received event timestamp",
                    "type": "string"
                },
                "message": {
                    "description": "Last received message timestamp",
                    "type": "string"
                },
                "start": {
                    "description": "Server start timestamp",
                    "type": "string"
                },
                "update": {
                    "description": "Last database update timestamp",
                    "type": "string"
                }
            }
        },
        "models.QpWebhook": {
            "type": "object",
            "properties": {
                "broadcasts": {
                    "description": "should handle broadcast messages",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappBoolean"
                        }
                    ]
                },
                "calls": {
                    "description": "should handle calls",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappBoolean"
                        }
                    ]
                },
                "extra": {
                    "description": "extra info to append on payload"
                },
                "failure": {
                    "description": "first failure timestamp",
                    "type": "string"
                },
                "forwardinternal": {
                    "description": "forward internal msg from api",
                    "type": "boolean"
                },
                "groups": {
                    "description": "should handle groups messages",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappBoolean"
                        }
                    ]
                },
                "readreceipts": {
                    "description": "should emit read receipts",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappBoolean"
                        }
                    ]
                },
                "success": {
                    "description": "last success timestamp",
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "trackid": {
                    "description": "identifier of remote system to avoid loop",
                    "type": "string"
                },
                "url": {
                    "description": "destination",
                    "type": "string"
                }
            }
        },
        "models.QpWebhookResponse": {
            "type": "object",
            "properties": {
                "affected": {
                    "description": "items affected",
                    "type": "integer"
                },
                "debug": {
                    "description": "Extra interface{} `json:\"extra,omitempty\"`",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "webhooks": {
                    "description": "current items",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.QpWebhook"
                    }
                }
            }
        },
        "models.QpWhatsappServer": {
            "type": "object",
            "properties": {
                "broadcasts": {
                    "description": "should handle broadcast messages",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappBoolean"
                        }
                    ]
                },
                "calls": {
                    "description": "should handle calls",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappBoolean"
                        }
                    ]
                },
                "devel": {
                    "type": "boolean"
                },
                "dispatching": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.QpDispatching"
                    }
                },
                "groups": {
                    "description": "should handle groups messages",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappBoolean"
                        }
                    ]
                },
                "readreceipts": {
                    "description": "should emit read receipts",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappBoolean"
                        }
                    ]
                },
                "reconnect": {
                    "description": "should auto reconnect, false for qrcode scanner",
                    "type": "boolean"
                },
                "timestamp": {
                    "type": "string"
                },
                "timestamps": {
                    "$ref": "#/definitions/models.QpTimestamps"
                },
                "token": {
                    "description": "Public token",
                    "type": "string",
                    "maxLength": 100
                },
                "user": {
                    "type": "string",
                    "maxLength": 36
                },
                "verified": {
                    "type": "boolean"
                },
                "wid": {
                    "description": "Whatsapp session id",
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "whatsapp.WhatsappAttachment": {
            "type": "object",
            "properties": {
                "checksum": {
                    "description": "Checksum for the message, used to verify integrity\nand avoid duplicates",
                    "type": "string"
                },
                "filelength": {
                    "description": "important to navigate throw content, declared file length",
                    "type": "integer"
                },
                "filename": {
                    "description": "document",
                    "type": "string"
                },
                "latitude": {
                    "description": "location msgs",
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "mime": {
                    "type": "string"
                },
                "seconds": {
                    "description": "audio/video",
                    "type": "integer"
                },
                "sequence": {
                    "description": "live location",
                    "type": "integer"
                },
                "thumbnail": {
                    "description": "small image representing something in this message, MIME: image/jpeg",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappMessageThumbnail"
                        }
                    ]
                },
                "url": {
                    "description": "Public access url helper content",
                    "type": "string"
                },
                "waveform": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "whatsapp.WhatsappBoolean": {
            "type": "integer",
            "enum": [
                -1,
                0,
                1
            ],
            "x-enum-varnames": [
                "FalseBooleanType",
                "UnSetBooleanType",
                "TrueBooleanType"
            ]
        },
        "whatsapp.WhatsappChat": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "(Identifier) whatsapp contact id, based on phone number or timestamp",
                    "type": "string"
                },
                "lid": {
                    "description": "(Local Identifier) new whatsapp unique contact id",
                    "type": "string"
                },
                "phone": {
                    "description": "phone number in E164 format",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "whatsapp.WhatsappChatPresenceType": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "WhatsappChatPresenceTypePaused",
                "WhatsappChatPresenceTypeText",
                "WhatsappChatPresenceTypeAudio"
            ]
        },
        "whatsapp.WhatsappConnectionState": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14
            ],
            "x-enum-varnames": [
                "Unknown",
                "UnPrepared",
                "UnVerified",
                "Starting",
                "Connecting",
                "Stopping",
                "Stopped",
                "Restarting",
                "Reconnecting",
                "Connected",
                "Fetching",
                "Ready",
                "Halting",
                "Disconnected",
                "Failed"
            ]
        },
        "whatsapp.WhatsappContact": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Required: Contact display name",
                    "type": "string"
                },
                "phone": {
                    "description": "Required: Contact phone number",
                    "type": "string"
                },
                "vcard": {
                    "description": "Optional: Full vCard string",
                    "type": "string"
                }
            }
        },
        "whatsapp.WhatsappLocation": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "Optional: Location full address",
                    "type": "string"
                },
                "latitude": {
                    "description": "Required: Location latitude in degrees",
                    "type": "number"
                },
                "longitude": {
                    "description": "Required: Location longitude in degrees",
                    "type": "number"
                },
                "name": {
                    "description": "Optional: Location name/description",
                    "type": "string"
                }
            }
        },
        "whatsapp.WhatsappMessage": {
            "type": "object",
            "properties": {
                "ads": {
                    "$ref": "#/definitions/whatsapp.WhatsappMessageAds"
                },
                "attachment": {
                    "$ref": "#/definitions/whatsapp.WhatsappAttachment"
                },
                "chat": {
                    "description": "Em qual chat (grupo ou direct) essa msg foi postada, para onde devemos responder",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappChat"
                        }
                    ]
                },
                "contact": {
                    "description": "Contact if exists",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappContact"
                        }
                    ]
                },
                "debug": {
                    "description": "Debug information for debug events",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappMessageDebug"
                        }
                    ]
                },
                "edited": {
                    "description": "Edited message",
                    "type": "boolean"
                },
                "exceptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "forwardingscore": {
                    "description": "How many times this message was forwarded",
                    "type": "integer"
                },
                "fromhistory": {
                    "description": "Generated from history sync",
                    "type": "boolean"
                },
                "frominternal": {
                    "description": "Sended via api",
                    "type": "boolean"
                },
                "fromme": {
                    "description": "Do i send that ?\nFrom any connected device and api",
                    "type": "boolean"
                },
                "id": {
                    "description": "Upper text msg id",
                    "type": "string"
                },
                "info": {
                    "description": "Extra information for custom messages"
                },
                "inreaction": {
                    "description": "Is this message a reaction to another message ?",
                    "type": "boolean"
                },
                "inreply": {
                    "description": "Msg in reply of another ? Message ID",
                    "type": "string"
                },
                "location": {
                    "description": "Location if exists",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappLocation"
                        }
                    ]
                },
                "participant": {
                    "description": "If this message was posted on a Group, Who posted it !",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappChat"
                        }
                    ]
                },
                "poll": {
                    "description": "Poll if exists",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappPoll"
                        }
                    ]
                },
                "status": {
                    "description": "Delivered, Read, Imported statuses",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappMessageStatus"
                        }
                    ]
                },
                "synopsis": {
                    "description": "Msg in reply preview",
                    "type": "string"
                },
                "text": {
                    "description": "Message text if exists",
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "trackid": {
                    "description": "Optional id of the system that send that message",
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/whatsapp.WhatsappMessageType"
                },
                "url": {
                    "description": "Url if exists",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappMessageUrl"
                        }
                    ]
                },
                "wid": {
                    "description": "WhatsApp ID of the sender",
                    "type": "string"
                }
            }
        },
        "whatsapp.WhatsappMessageAds": {
            "type": "object",
            "properties": {
                "app": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "sourceid": {
                    "type": "string"
                },
                "sourceurl": {
                    "type": "string"
                },
                "thumbnail": {
                    "description": "small image representing something in this message, MIME: image/jpeg",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappMessageThumbnail"
                        }
                    ]
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "whatsapp.WhatsappMessageDebug": {
            "type": "object",
            "properties": {
                "event": {
                    "type": "string"
                },
                "info": {
                    "description": "Additional information about the event"
                },
                "reason": {
                    "description": "Reason for the debug event",
                    "type": "string"
                }
            }
        },
        "whatsapp.WhatsappMessageStatus": {
            "type": "string",
            "enum": [
                "",
                "error",
                "imported",
                "delivered",
                "read"
            ],
            "x-enum-varnames": [
                "WhatsappMessageStatusUnknown",
                "WhatsappMessageStatusError",
                "WhatsappMessageStatusImported",
                "WhatsappMessageStatusDelivered",
                "WhatsappMessageStatusRead"
            ]
        },
        "whatsapp.WhatsappMessageThumbnail": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "base64 data",
                    "type": "string"
                },
                "mime": {
                    "description": "content mime type",
                    "type": "string"
                },
                "urlprefix": {
                    "description": "trick for '\u003cimg src=' urls prefix",
                    "type": "string"
                }
            }
        },
        "whatsapp.WhatsappMessageType": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13
            ],
            "x-enum-varnames": [
                "UnhandledMessageType",
                "ViewOnceMessageType",
                "ImageMessageType",
                "DocumentMessageType",
                "AudioMessageType",
                "VideoMessageType",
                "TextMessageType",
                "LocationMessageType",
                "ContactMessageType",
                "CallMessageType",
                "SystemMessageType",
                "GroupMessageType",
                "RevokeMessageType",
                "PollMessageType"
            ]
        },
        "whatsapp.WhatsappMessageUrl": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "thumbnail": {
                    "description": "small image representing something in this message, MIME: image/jpeg",
                    "allOf": [
                        {
                            "$ref": "#/definitions/whatsapp.WhatsappMessageThumbnail"
                        }
                    ]
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "whatsapp.WhatsappPoll": {
            "type": "object",
            "properties": {
                "options": {
                    "description": "Required: Array of poll options",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "question": {
                    "description": "Required: Poll question/title",
                    "type": "string"
                },
                "selections": {
                    "description": "Optional: Maximum number of options a user can select (default: 1)",
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "X-QUEPASA-TOKEN",
            "in": "header"
        }
    }
}